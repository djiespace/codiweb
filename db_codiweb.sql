-- phpMyAdmin SQL Dump
-- version 4.6.6deb4
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: 21 Feb 2019 pada 13.23
-- Versi Server: 10.1.37-MariaDB-0+deb9u1
-- PHP Version: 7.0.33-0+deb9u1

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `db_codiweb`
--

-- --------------------------------------------------------

--
-- Struktur dari tabel `tbl_artikel`
--

CREATE TABLE `tbl_artikel` (
  `Id_artikel` int(11) NOT NULL,
  `Slug_artikel` char(50) NOT NULL,
  `Judul_artikel` char(50) NOT NULL,
  `Img_artikel` char(255) NOT NULL,
  `Isi_artikel` text NOT NULL,
  `Tanggal_artikel` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `Penulis_artikel` char(50) NOT NULL,
  `Id_kategori` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `tbl_artikel`
--

INSERT INTO `tbl_artikel` (`Id_artikel`, `Slug_artikel`, `Judul_artikel`, `Img_artikel`, `Isi_artikel`, `Tanggal_artikel`, `Penulis_artikel`, `Id_kategori`) VALUES
(23, 'Pengenalan-Html-Untuk-Pemula', 'Pengenalan Html Untuk Pemula', '1550714955pengenalan-html5-untuk-pemula.png', '<p><strong>Apa Itu HTML? </strong></p><p>&nbsp; mungkin pertanyaan inilah yang terbesit pada benak anda yang baru mulai masuk dalam dunia web programming. HTML merupakan bahasa pemrograman dasar yang wajib dikuasai bagi seorang web developer.karena HTML merupakan unsur dari sebuah pembangunan website. jika diibaratkan&nbsp; HTML menjadi pondasi pada sebuah rumah atau bangunan. karena bentuk pada halaman website dibuat menggunakan HTML</p><p>Pengertian HTML ?</p><p>&nbsp;</p><p>&nbsp;</p>', '2019-02-21 02:09:15', 'marketadjie', 6),
(24, 'Pengenalan-PHP', 'Pengenalan PHP', '1550718085pengenalan-php.png', '<p><strong>Pengenalan PHP</strong></p><p>&nbsp; Pada awalnya PHP merupakan kependekan dari&nbsp;<em>Personal Home Page</em>&nbsp;(Situs personal). PHP pertama kali dibuat oleh&nbsp;Rasmus Lerdorf&nbsp;pada tahun&nbsp;1995. Pada waktu itu PHP masih bernama&nbsp;<em>Form Interpreted</em>&nbsp;(FI), yang wujudnya berupa sekumpulan skrip yang digunakan untuk mengolah data formulir dari&nbsp;web. Selanjutnya Rasmus merilis kode sumber tersebut untuk umum dan menamakannya&nbsp;PHP/FI. Dengan perilisan kode sumber ini menjadi&nbsp;sumber terbuka, maka banyak&nbsp;pemrogram&nbsp;yang tertarik untuk ikut mengembangkan PHP. Pada November 1997, dirilis PHP/FI 2.0. Pada rilis ini,&nbsp;<em>interpreter</em>&nbsp;PHP sudah diimplementasikan dalam program&nbsp;C. Dalam rilis ini disertakan juga modul-modul ekstensi yang meningkatkan kemampuan PHP/FI secara signifikan. Pada tahun 1997, sebuah perusahaan bernama&nbsp;Zend&nbsp;menulis ulang interpreter PHP menjadi lebih bersih, lebih baik, dan lebih cepat.</p><p>&nbsp; Kemudian pada Juni 1998, perusahaan tersebut merilis interpreter baru untuk PHP dan meresmikan rilis tersebut sebagai&nbsp;PHP 3.0&nbsp;dan singkatan PHP diubah menjadi&nbsp;akronim berulang&nbsp;<em>PHP: Hypertext Preprocessing</em>. Pada pertengahan tahun 1999, Zend merilis interpreter PHP baru dan rilis tersebut dikenal dengan&nbsp;PHP 4.0. PHP 4.0 adalah versi PHP yang paling banyak dipakai pada awal abad ke-21. Versi ini banyak dipakai disebabkan kemampuannya untuk membangun aplikasi web kompleks tetapi tetap memiliki kecepatan dan stabilitas yang tinggi. Pada&nbsp;Juni&nbsp;2004, Zend merilis&nbsp;PHP 5.0. Dalam versi ini, inti dari interpreter PHP mengalami perubahan besar. Versi ini juga memasukkan model&nbsp;pemrograman berorientasi objek&nbsp;ke dalam PHP untuk menjawab perkembangan bahasa pemrograman ke arah paradigma berorientasi objek. Server web bawaan ditambahkan pada versi 5.4 untuk mempermudah pengembang menjalankan kode PHP tanpa menginstall software server.</p><p>PHP atau Hypertext Prepocessor merupakan bahasa pemrograman yang bersifat dinamis yang di desain khusus untuk web development atau pengembangan web. PHP memiliki sifat Server-Side karena PHP dijalankan atau di eksekusi dari sisi server bukan pada komputer client. PHP di jalankan melalui aplikasi web browser sama halnya seperti HTML.</p><p>Dalam website dinamis atau pun interaktif, bahasa pemrograman PHP dipakai sebagai media untuk mempersingkat tatanan bahasa pemrograman HTML dan CSS. Dalam pembuatan website yang berisi data siswa misalnya. Dengan menggunakan bahasa pemrograman HTML dan CSS, maka dibutuhkan baris kode yang sangat panjang (sesuai dengan jumlah data siswa yang ingin diinput), sedangkan dengan menggunakan bahasa pemrograman PHP, baris kode yang dibutuhkan dapat dipersingkat hingga menjadi beberapa baris saja.</p><p>Selain dapat mempersingkat script bahasa pemrograman, PHP juga dapat digunakan untuk menginput data ke sistem database, mengkonversi halaman yang berisi text menjadi dokumen PDF, melaksanakan manajemen cookie dan session dalam berbagai macam aplikasi, menghasilkan gambar, dan berbagai macam kegunaan lainnya.</p><p>Berikut contoh penggunaan php pada HTML :</p><p>&lt;html&gt;</p><p>&nbsp;</p><p>&lt;head&gt;</p><p>&lt;title&gt;Belajar cara memasukkan kode PHP&lt;/title&gt;</p><p>&lt;/head&gt;</p><p>&lt;body&gt;</p><p>&lt;p&gt;Kalimat ini dibuat menggunakan HTML saja &lt;/p&gt;</p><p>&lt;?php</p><p>echo &ldquo;&lt;p&gt;Kalimat ini dibuat menggunakan mode PHP style&lt;/p&gt;&rdquo;;</p><p>?&gt;</p><p>&lt;?</p><p>echo &ldquo;&lt;p&gt;Kalimat ini dibuat menggunakan mode SMGL style &lt;/p&gt;&rdquo;;</p><p>?&gt;</p><p>&lt;%</p><p>echo &ldquo;&lt;p&gt;Kalimat ini dibuat menggunakan mode ASP Style &lt;/p&gt;&rdquo;;</p><p>%&gt;</p><p>&lt;script language=&rdquo;php&rdquo;&gt;</p><p>echo &ldquo;&lt;p&gt;Kalimat ini dibuat menggunakan mode Script Style &lt;/p&gt;&rdquo;;</p><p>&lt;/script&gt;</p><p>&lt;?=&rdquo; &lt;p&gt;Kalimat ini dibuat menggunakan mode Instan style &lt;/p&gt;&rdquo;; ?&gt;</p><p>&lt;/body&gt;</p><p>&lt;/html&gt;</p><p>Note : Untuk menggunakan php pada HTML, kita harus melakukan penyimpanan file dengan format &ldquo;namafile.php&rdquo;. Jika kita hanya menggunakan &ldquo;.html&rdquo;, maka fungsi &ndash; fungsi pada php tidak akan dapat berjalan di file tersebut.</p><p>Pada bagian kode &ndash; kode di atas, untuk menyisipkan fungsi php / menggunakan fungsi php, kita harus menggunakan tag &ldquo;&lt;?php&rdquo; sebagai awalan dan tag &ldquo;?&gt;&rdquo; sebagai penutup. Kemudian, pada kode &ndash; kode di atas, ada yang namanya &ldquo;echo&rdquo;. &ldquo;Echo&rdquo; ini di gunakan untuk menampilkan tulisan ataupun value dalam sebuah variable dan biasanya para programmer sering menyingkat kata &ndash; kata echo dengan tag php seperti ini &ldquo;&lt;?= &ldquo;kalimat atau variable&rdquo; ?&gt;&rdquo;.</p><p>Setelah membuat file php, untuk menjalankannya pada computer kita, kita membutuhkan aplikasi &ndash; aplikasi untuk mempemudah kita untuk membuka file tersebut seperti XAMPP. Setelah itu, pada aplikasi XAMPP tersebut hanya perlu menjalankan module yang bernama &ldquo;Apache&rdquo;. Kemudian hanya perlu mengetikan https://localhost/namafolder/namafile.php pada web browser kalian.</p>', '2019-02-21 03:01:25', 'marketadjie', 14),
(25, 'Lebih-Kenal-Jauh-Dengan-HTML', 'Lebih Kenal Jauh Dengan HTML', '1550718438pengenalan-html5-2.png', '<p>&nbsp; Pada tutorial sebelumnya di awali dengan pengenalan tentang html, pembahasan kali ini membahas pengertian tag, elemen, dan atribut html masih berupa teori, dimana teori ini bertujuan untuk lebih membuka gambaran&nbsp;terhadap bahasa html. Seperti yang sebelumnya saya katakan bahwa html bukanlah bahasa pemrograman melainkan bahasa markah yang memiliki susunan terstruktur dan tersusun sesuai tag markah dengan masing-masing fungsinya agar browser dapat mengetahui perintah dari susunan kode tersebut akan di eksekusi seperti apa.</p><p><strong>Bagaimana browser dapat mengenali perintah yang diberikan pada dokumen html?</strong></p><p>&nbsp; Pada bahasa html terdapat susunan pola terstruktur agar dapat di kenali browser, susunan tersebut adalah&nbsp;tag, elemen, dan atribut html, sehingga sebuah halaman web dapat diterjemahkan ke dalam bentuk visual berdasarkan perintah-perintah yang diberikan, misalnya sebuah teks, biasanya&nbsp;teks memiliki gaya seperti cetak&nbsp;tebal, miring, garis bawah dan lain-lain, gaya tersebut memiliki masing-masing perintah yang berbeda. Pada lain kasus sebuah gaya dapat di implementasikan secara bersamaan, sehingga membentuk cetakan teks yang memiliki banyak gaya dimana sebuah perintah dijalankan dalam satu elemen.</p><p>Untuk lebih jelasnya mari kita pisahkan masing-masing fungsi tag, elemen, dan atribut html ke dalam pembahasan yang lebih mudah dimengerti.</p><p><strong>Pengertian Tag HTML</strong></p><p>&nbsp; Tag adalah bagian inti dari html, itulah mengapa html di sebut markup languange, karena berdasarkan pada penandaan setiap objek yang diapit antara tag, dari situlah browser akan mengenali perintah seperti apa output yang akan ditampilkan. Tag adalah teks&nbsp;khusus (perintah) antara dua karakter&nbsp;&ldquo;&lt;&rdquo; dan &ldquo;&gt;&rdquo; yang menjadi pembeda antara teks biasa agar dikenali browser untuk&nbsp;di terjemahkan&nbsp;kedalam sebuah bentuk visual berdasarkan perintah yang diberikan, biasanya sebuah tag ditulis secara berpasangan (tag pembuka dan tag penutup) tetapi ada tag tunggal yang tidak memerlukan penutup.</p><p>Sebagai contoh tag &lt;haed&gt;, tag ini berfungsi untuk memberikan informasi kepada browser tentang dokumen html, seluruh&nbsp;isi didalam tag head ini tidak akan menampilkan output ke layar monitor, sehingga tag ini wajib menggunakan penutup &lt;/head&gt; agar dapat dibedakan antara informasi dokumen dan isi dokumen.</p><p>Berbeda dengan tag tunggal, dimana tag tunggal tidak memperlukan&nbsp;tag penutup, contohnya &lt;hr&gt; untuk mencetak garis luruh, &lt;br /&gt; untuk membuat baris baru, dan masih banyak lagi.</p><p><strong>Pengertian Elemen HTML</strong></p><p>&nbsp; Elemen adalah&nbsp;semua isi yang berada di dalam tag, diantara tag pembuka dan penutup, contoh dasarnya seperti ini &lt;tag&gt;Elemen&lt;/tag&gt;. Sedangkan pada kasus lain ketika ingin mencetak teks&nbsp;tebal dan miring&nbsp;pada satu elemen dapat menambahkan&nbsp;kedua fungsi tersebut secara bersamaan, biasanya hal tersebut dapat dikatakan nested tag, hampir setiap elemen memiliki tag bersarang.</p><p>Penulisan elemen bersarang tidak boleh ditulis secara menyilang, tag penutup untuk elemen harus berdasarkan urutan awal tag pembuka, sehingga tidak saling tumpang tindih.</p><p>Contoh penulisan elemen bersarang yang benar.</p><p>&lt;b&gt; &lt;i&gt; Elemen &lt;/i&gt; &lt;/b&gt;</p><p>Contoh penulisan susunan elemen yang salah.</p><p>&lt;b&gt; &lt;i&gt; Elemen &lt;/b&gt; &lt;/i&gt;</p><p>Kebanyakan dokumen html ditulis secara bersarang sehingga dibutuhkan ketelitian agar tidak menimbulkan kesalahan dalam penulisan dokumen html.</p><p><strong>Pengertian Atribut HTML</strong></p><p>Atribut adalah informasi tambahan yang disisipkan pada tag, dimana informasi tersebut dapat berupa instruksi warna latar atau warna teks, ukuran panjang dan lebar, serta dapat berupa penamaan sebuah class dan id. Atribut dalam satu tag bisa lebih dari satu dan dipisahkan dengan menggunakan karakter kutip dua serta miliki penamaan dan nilai yang berbeda.</p><p>&lt;tag nama-atribut=&quot;nilai-atribut&quot;&gt;&lt;/tag&gt;</p><p>Sebagai contoh pemberian warna latar dan warna teks pada elemen tag pembuka isi dokumen html.</p><p>&lt;body bgcolor=&quot;red&quot; text=&quot;white&quot;&gt; &lt;b&gt;Contoh pemberian warna pada elemen&lt;/b&gt; &lt;/body&gt;</p><p>Dari perintah di atas akan diterjemahkan oleh browser sebuah warna latar dokumen memiliki warna merah dan teks warna putih.</p><p>Untuk penulisan nama dan atribut sangat di sarankan dengan menggunakan huruf kecil, dan wajib teliti dalam memberikan tanda pemisah kutip dua.</p><p>Akhir kata dalam tutorial yang bersifat teoritis ini semoga dapat memberikan pemahaman tentang tag, elemen, dan atribut html sebelum masuk ke materi&nbsp;lain yang lebih mengutamakan praktek.</p>', '2019-02-21 03:07:18', 'marketadjie', 6),
(26, 'Kenalan-Dengan-Css', 'Kenalan Dengan Css', '1550719816pengenalan-css.png', '<p>CSS adalah bahasa kedua setelah <a href=\"https://www.petanikode.com/html-dasar\">HTML</a> yang harus dipelajari seorang <em>web developer</em>.</p>\r\n\r\n<p>Pengetahuan tentang CSS sangatlah penting bagi seorang web developer, karena dengan CSS kita bisa:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Halaman <em>landing page</em> yang menarik;</p>\r\n	</li>\r\n	<li>\r\n	<p>Template atau tema blog;</p>\r\n	</li>\r\n	<li>\r\n	<p>Mengubah PSD (Desain web) menjadi HTML;</p>\r\n	</li>\r\n	<li>\r\n	<p>dan sebagainya.</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Contohnya, bagaimana tampilan facebook tanpa CSS?</p>\r\n\r\n<p>Mungkin bisa seperti ini:</p>\r\n\r\n<p><img alt=\"Gambar Situs web tampa css dan dengan css\" src=\"https://2.bp.blogspot.com/-R93-cUFP-Lc/VZsMcMecDKI/AAAAAAAABlQ/Kbk66QwSqX0/s1600/website%2Btampa%2Bcss%2Bdan%2Bdengan%2Bcss.png\" style=\"height:354px; width:701px\" /></p>\r\n\r\n<p>Pada artike ini, kita akan membahas pengenalan dasar CSS, seperti:</p>\r\n\r\n<ul>\r\n	<li>\r\n	<p>Apa itu CSS?</p>\r\n	</li>\r\n	<li>\r\n	<p>Struktur dasar CSS;</p>\r\n	</li>\r\n	<li>\r\n	<p>Cara Menuliskan CSS di HTML;</p>\r\n	</li>\r\n	<li>\r\n	<p>Tips Belajar CSS</p>\r\n	</li>\r\n</ul>\r\n\r\n<p>Mari kita mulai&hellip;</p>\r\n\r\n<h2><a name=\"apa-itu-css\"></a>Apa itu CSS?</h2>\r\n\r\n<p>CSS <em>(Cascade Style Sheet)</em> meruapakan sebuah bahasa untuk mengatur tampilan web sehingga terlihat lebih menarik dan indah.</p>\r\n\r\n<p>Dengan CSS, kita dapat mengatur <em>layout</em> (tata letak), warna, font, garis, dan lain-lain.</p>\r\n\r\n<p>CSS pertama kali diperkenalkan oleh <a href=\"https://en.wikipedia.org/wiki/H%C3%A5kon_Wium_Lie\">H&aring;kon Wium Lie</a> pada tahun 1994.</p>\r\n\r\n<h3><a name=\"variasi-atau-versi-css\"></a>Variasi atau Versi CSS</h3>\r\n\r\n<p>Sejak awal diperkenalkan CSS memiliki beberapa variasi:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>CSS 1: adalah versi pertama (17 Desember 1996)</p>\r\n	</li>\r\n	<li>\r\n	<p>CSS 2: adalah versi ke-2 (Mei 1998)</p>\r\n	</li>\r\n	<li>\r\n	<p>CSS 2.1: (7 juni 2011)</p>\r\n	</li>\r\n	<li>\r\n	<p>CSS 3: (2012)</p>\r\n	</li>\r\n	<li>\r\n	<p>CSS 4: masih dalam pengembangan.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>Apa bedanya dari setiap versi tersebut?</p>\r\n\r\n<p>Tentunya ada penambahan dan pengurangan&hellip;</p>\r\n\r\n<h2><a name=\"struktur-kode-atau-sintaks-dasar-css\"></a> Struktur Kode atau Sintaks Dasar CSS</h2>\r\n\r\n<p>Struktur kode CSS terdiri dari tiga bagian:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Selektor;</p>\r\n	</li>\r\n	<li>\r\n	<p>Blok Deklarasi;</p>\r\n	</li>\r\n	<li>\r\n	<p>Properti dan nilanya.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>Contoh:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Mari kita bahas satu per satu&hellip;</p>\r\n\r\n<h3><a name=\"selektor\"></a>Selektor</h3>\r\n\r\n<p>Selektor adalah kata kunci untuk memilih elemen HTML yang akan kita atur.</p>\r\n\r\n<p>Contohnya:</p>\r\n\r\n<pre>\r\n<code>h1 {</code>\r\n<code>    </code><code>color: red;</code>\r\n<code>}</code></pre>\r\n\r\n<p>Artinya: Kita memilih semua elemen <code>&lt;h1&gt;</code>, lalu diberikan warna teks <code>red</code> (merah).</p>\r\n\r\n<p>Selektor dapat berupa nama tag, class, id, dan atribut.</p>\r\n\r\n<p>Contoh:</p>\r\n\r\n<pre>\r\n<code>/* Selektor dengan nama tag */</code>\r\n<code>h2 {</code>\r\n<code>    </code><code>color: blue</code>\r\n<code>}</code>\r\n\r\n<code>/* Selektor degnan class */</code>\r\n<code>.bg-yellow {</code>\r\n<code>    </code><code>backgound-color: yellow;</code>\r\n<code>}</code>\r\n\r\n<code>/* selektor dengan ID elemen */</code>\r\n<code>#header {</code>\r\n<code>    </code><code>background: grey;</code>\r\n<code>}</code>\r\n\r\n<code>/* Selektor dengan Atribut */</code>\r\n<code>input[type=text]{</code>\r\n<code>    </code><code>background: yellow;</code>\r\n<code>}</code></pre>\r\n\r\n<h3><a name=\"blok-deklarasi\"></a>Blok Deklarasi</h3>\r\n\r\n<p>Blok deklarasi adalah tempat kita menuliskan atribut-atibut CSS yang akan diberikan ke pada selektor.</p>\r\n\r\n<p>Contoh:</p>\r\n\r\n<pre>\r\n<code>p {</code>\r\n<code>    </code><code>font-size: 18px;</code>\r\n<code>}</code></pre>\r\n\r\n<p>Artinya, kita akan mengatur ukuran font dari tag <code>&lt;p&gt;</code> sebesar <code>18px</code>.</p>\r\n\r\n<p>Blok deklarasi dimulai atau dibuka dengan tanda kurung <code>{</code> lalu ditutup dengan <code>}</code>.</p>\r\n\r\n<h3><a name=\"properti-dan-nilainya\"></a>Properti dan Nilainya</h3>\r\n\r\n<p>Properti merupakan atribut atau sekumpulan aturan yang akan diberikan kepada elemen yang dipilih.</p>\r\n\r\n<pre>\r\n<code>properti: &quot;nilai&quot;;</code></pre>\r\n\r\n<p>Setiap properti harus diakhiri dengan titik koma (<code>;</code>). Apabila hanya terdapat satu properti, boleh tidak menggunakan titik koma.</p>\r\n\r\n<p>Properti harus ditulis di dalam blok deklarasi.</p>\r\n\r\n<p>Contoh:</p>\r\n\r\n<pre>\r\n<code>blockquote {</code>\r\n<code>    </code><code>background: pink;</code>\r\n<code>}</code></pre>\r\n\r\n<p>Jangan tulis seperti ini:</p>\r\n\r\n<pre>\r\n<code>background: pink;</code>\r\n\r\n<code>p {</code>\r\n\r\n<code>}</code></pre>\r\n\r\n<h2><a name=\"cara-menulis-kode-css-dalam-html\"></a>Cara Menulis kode CSS dalam HTML</h2>\r\n\r\n<p>Penulisan kode CSS di HTML dapat dilakukan di dalam tag <code>&lt;style&gt;</code>. Tag tersebut dapat ditulis di dalam tag <code>&lt;head&gt;</code> atau <code>&lt;body&gt;</code>.</p>\r\n\r\n<p>Kebanyakan orang menulisnya di dalam tag <code>&lt;head&gt;</code>. Perhatiakn contoh berikut ini:</p>\r\n\r\n<pre>\r\n<code>&lt;!DOCTYPE html&gt;</code>\r\n<code>&lt;html&gt;</code>\r\n<code>&lt;head&gt;</code>\r\n<code>&lt;title&gt;Contoh Penulisan kode CSS&lt;/title&gt;</code>\r\n\r\n<code>&lt;style type=&quot;text/css&quot;&gt;</code>\r\n<code>    </code><code>p { color: red }</code>\r\n<code>&lt;/style&gt;</code>\r\n\r\n<code>&lt;/head&gt;</code>\r\n\r\n<code>&lt;body&gt;</code>\r\n<code>    </code><code>&lt;p&gt;Sebuah contoh paragraf yang sudah diberikan oleh kode CSS&lt;/p&gt;</code>\r\n<code>&lt;/body&gt;</code>\r\n<code>&lt;/html&gt;</code></pre>\r\n\r\n<p>Hasilnya, elemen <code>&lt;p&gt;</code> akan berwarna merah:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Selain dengan cara ini, ada dua cara lagi yang bisa digunakan:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Inline CSS</p>\r\n	</li>\r\n	<li>\r\n	<p>Eksternal CSS</p>\r\n	</li>\r\n</ol>\r\n\r\n<h2><a name=\"tips-belajar-css\"></a>Tips Belajar CSS</h2>\r\n\r\n<p>Ada beberapa tips yang ingin saya bagikan untuk membantu teman-teman dalam belajar CSS:</p>\r\n\r\n<h3><a name=\"tips-1-cara-menghapal-kode-dan-properti-css\"></a> Tips #1: Cara Menghapal Kode dan Properti CSS</h3>\r\n\r\n<p>Ada ratusan properti CSS yang harus diingat.</p>\r\n\r\n<p>Apakah kita akan mampu menghapal semuanya?</p>\r\n\r\n<p>Tergantung&hellip;</p>\r\n\r\n<p>Jika kamu sering mengetik kode CSS tanpa <em>copas</em>, bisa jadi ingatanmu terhadap kode atau properti CSS akan semkkin kuat.</p>\r\n\r\n<h3><a name=\"tips-2-gunakan-inspect-elemen\"></a>Tips #2: Gunakan Inspect Elemen</h3>\r\n\r\n<p><a href=\"https://www.petanikode.com/inspect-element\">Inspect elemen</a> ada di setiap browser. Bisa dibuka dengan Klik kanan, lalu pilih <em>Inspect Element</em>.</p>\r\n\r\n<p>Di inspect elemen, kita bisa menulis kode CSS secara langsung dan hasilnya pun akan langsung kita ketahui.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<h3><a name=\"tups-3-gunakan-cheat-sheet\"></a>Tups #3: Gunakan Cheat Sheet</h3>\r\n\r\n<p>Cheat Sheet adalah halaman yang berisi contekan kode CSS.</p>\r\n\r\n<p>Tunggu dulu&hellip;</p>\r\n\r\n<p>Contekan?</p>\r\n\r\n<p>Apakah boleh?</p>\r\n\r\n<p>Ya tentu saja boleh.</p>\r\n\r\n<p>Ini kan bukan ujian.</p>\r\n\r\n<p>Kamu bisa mencari <em>cheat sheet</em> CSS di Google dengan kata kunci &ldquo;CSS Cheat Sheet&rdquo;.</p>\r\n\r\n<p><img alt=\"CSS Cheat Sheet\" src=\"https://d33wubrfki0l68.cloudfront.net/676381f3a8c4ec544a154d3ea9ecbb307f53c6a9/5d11f/img/css/dasar/cheat-sheet.png\" style=\"height:384px; width:526px\" /></p>\r\n\r\n<p>Silahkan di-download, lalu di-print.</p>\r\n\r\n<p>Setelah itu bisa ditempel di depan meja atau ditaruh di atas meja.</p>\r\n\r\n<p>Kapanpun butuh contekan, kita bisa melihatnya.</p>\r\n\r\n<h2><a name=\"apa-selanjutnya\"></a>Apa Selanjutnya?</h2>\r\n\r\n<p>Kita sudah mengenal hal dasar dalam CSS seperti:</p>\r\n\r\n<ol>\r\n	<li>\r\n	<p>Stuktur Dasar CSS yang terdiri dari</p>\r\n\r\n	<ul>\r\n		<li>\r\n		<p>Selektor;</p>\r\n		</li>\r\n		<li>\r\n		<p>Blok deklarasi;</p>\r\n		</li>\r\n		<li>\r\n		<p>dan properti.</p>\r\n		</li>\r\n	</ul>\r\n	</li>\r\n	<li>\r\n	<p>Cara menulis CSS di HTML.</p>\r\n	</li>\r\n</ol>\r\n\r\n<p>Lalu apa selanjutnya?</p>\r\n\r\n<p>Selanjutnya silahkan pelajari lebih dalam tentang <a href=\"https://www.petanikode.com/css-selektor/\">Selektor</a> dan latihan dengan beberapa properti yang sering digunakan.</p>\r\n\r\n<p>Selamat belajar&hellip;</p>\r\n\r\n<p>&nbsp;</p>\r\n', '2019-02-21 03:30:16', 'marketadjie', 7),
(27, 'Linux-Atau-Windows', 'Linux Atau Windows', '1550720128linux-or-windows.png', '<h2><strong>15 Perbedaan Linux dengan Windows Harus Dipahami</strong></h2>\r\n\r\n<div class=\"row-fluid\">\r\n<p style=\"text-align:left\">Sistem operasi adalah bagian yang penting dari sebuah komputer. Tanpa adanya sistem operasi, maka komputer tidak akan dapat digunakan oleh penggunanya dengan baik dan benar sebagaimana yang seharusnya. Sistem operasi menjadi jembatan antara pengguna dengan piranti komputer, agar pengguna dapat melakukan pekerjaan dengan aplikasi-aplikasi tertentu yang dapat dijalankan di dalam sebuah sistem operasi.</p>\r\n\r\n<p style=\"text-align:left\">Ada dua jenis sistem operasi yang dewasa ini banyak digunakan oleh berbagai pengguna komputer. Dua besaran sistem operasi itu adalah Windows dan juga Linux. Walaupun Linux memiliki berbagai jenis varian, akan tetapi dari segi kernel yang digunakan tetap sama. Sementara itu Windows juga memiliki berbagai jenis Windows dari Windows NT sampai dengan Windows 10 yang paling baru.</p>\r\n\r\n<p style=\"text-align:left\">Mengetahui perbedaan dua sistem operasi ini akan membantu saat perlu memutuskan menggunakan sistem operasi yang mana di antara kedua sistem operasi tersebut. Misalnya, apabila Anda lebih sering melakukan kegiatan bermain alias <em>ngegame </em>di komputer atau laptop Anda, maka mungkin Windows akan lebih cocok untuk Anda pakai daripada Linux. Sementara apabila Anda ingin menjadikan komputer atau laptop Anda sebagai komputer server maka bisa jadi Linux lebih tepat untuk Anda gunakan.</p>\r\n\r\n<p style=\"text-align:left\">Jadi, apa saja perbedaan Linux dengan Windows yang perlu diketahui? Berikut ini beberapa perbedaan Linux dengan Windows yang telah dirangkum dari berbagai sumber.</p>\r\n<strong>1. Perbedaan dari segi harga</strong>\r\n\r\n<p style=\"text-align:left\">Windows adalah salah satu sistem operasi yang sangat populer. Di Indonesia sistem operasi bajakan Windows sangat banyak tersebar di berbagai tempat selain karena tersedianya akses mentahan windows di internet, juga banyaknya orang yang melakukan cracking pada sistem aktivasi Windows. Fenomena ini menunjukkan bahwa Windows sejatinya bukan sistem operasi yang gratis alias berbayar. Sementara itu, Linux merupakan sebuah sistem operasi berbasis <em>open source </em>yang gratis. Sejak awal kali menggunakan Linux, kamu tidak perlu membayar apapun.</p>\r\n\r\n<p style=\"text-align:left\"><strong>2. Perbedaan dari segi penampilan</strong></p>\r\n\r\n<p style=\"text-align:left\">Dari segi tampilan atau antarmuka untuk pengguna, Windows relatif lebih baik bila dibandingkan dengan Linux. Sejak Windows 98, Windwos relatif sudah mampu menghadirkan tampilan antarmuka yang ramah dengan penggunanya serta memanjakan mata kita. Sementara itu, sistem operasi Linux relatif lebih tertinggal bila dibandingkan Windows dari segi tampilan, walaupun saat ini keduanya sudah sama-sama bersaing bagaimana menghadirkan tampilan yang nyaman untuk penggunanya.</p>\r\n\r\n<p style=\"text-align:left\"><strong>3. Perbedaan dari segi keamanan</strong></p>\r\n\r\n<p style=\"text-align:left\">Oleh karena kepopulerannya serta mekanisme menjalankan aplikasi yang dimiliki oleh Windows, ada banyak virus yang dikembangkan untuk sistem operasi Windows. Sementara itu Linux lebih &lsquo;aman&rsquo; karena tidak banyak virus yang dikembangkan, dan juga model menjalankan aplikasi di Linux yang berbeda bila dibandingkan dengan Windows.</p>\r\n\r\n<p style=\"text-align:left\"><strong>4. Perbedaan dari segi ketersediaan perangkat lunak yang bisa dipakai</strong></p>\r\n\r\n<p style=\"text-align:left\">Pada Windows, relatif ada banyak sekali aplikasi atau software yang bisa dipakai, baik aplikasi perkantoran, aplikasi multimedia, ataupun aplikasi permainan. Banyaknya aplikasi tersebut karena tentun saja developer banyak yang tertarik untuk mengembangkan aplikasi di sistem operasi Windows yang notabene lebih banyak penggunanya bila dibandingkan dengan Linux (secara umumnya). Permainan-permainan yang membutuhkan grafis tinggi dan sejenisnya, tersedia dengan melimpah di Windows, sementara pada Linux hal itu sangat jarang ditemui. Walaupun demikian, oleh karena sifatnya yang <em>open source </em>dan gratis, bukan tidak mungkin ke depannya ada banyak permainan yang dibuat dan dijalankan dengan sistem Linux dan bisa menyaingi permainan di Windows.</p>\r\n\r\n<p style=\"text-align:left\"><strong>5. Perbedaan dari segi penggunaan sistem operasi</strong></p>\r\n\r\n<p style=\"text-align:left\">Sistem operasi Windows lebih banyak digunakan pada komputer-komputer yang digunakan untuk mengerjakan pekerjaan kantoran. Mengetik, membuat presentasi, dan sejenisnya. Mahasiswa atau siswa juga mungkin membutuhkan dan lebih sering menggunakan sistem operasi ini untuk penggunaan sehari-hari. Aplikasi multimedia yang banyak juga menyebabkan designer grafis lebih banyak menggunakan Windows. Sementara itu, karena sifat keamanan yang dimilikinya, Linux cenderung lebih banyak dipakai sebagai sistem operasi yang digunakan pada domain-domain yang membutuhkan keamanan tinggi, seperti komputer server, administrasi LAN kantor, layanan web proxy, layanan SSH, dan lain sebagainya.</p>\r\n\r\n<div class=\"enleft\">\r\n<div id=\"div-gpt-ad-1495635998525-1\">&nbsp;</div>\r\n</div>\r\n\r\n<p style=\"text-align:left\"><strong>6. Perbedaan dari segi pengembangan kode</strong></p>\r\n\r\n<p style=\"text-align:left\">Windows adalah salah satu sistem operasi yang bersifat sistem operasi tertutup. Hal itu berarti pengembangan sistem operasi ini hanya bisa dilakukan oleh pekerja-pekerja atau pabrik Windows itu sendiri yaitu Microsoft. Sementara sistem operasi Linux adalah sistem operasi yang bersifat berkode terbuka alias <em>open source</em>. Hal itu berarti siapa saja dapat mengembangkan sistem operasi ini. Siapapun bisa mendownload <em>source code </em>yang dimiliki oleh program ini lalu mengembangkannya sesuai dengan keinginannya. Tentunya bekerja dengan banyak orang untuk mengembangkan suatu sistem operasi lebih mudah dilakukan bila dibandingkan mengerjakan sendirian. Sistem operasi yang dikembangkan oleh banyak orang itulah yang kemudian disebut dengan <em>distro Linux</em>.</p>\r\n\r\n<p style=\"text-align:left\"><strong>7. Perbedaan dari segi dukungan piranti keras</strong></p>\r\n\r\n<p style=\"text-align:left\">Sistem operasi dapat berjalan dengan maksimal apabila terdapat <em>driver </em>yang sesuai dengan piranti keras yang terpasang pada komputer. Pada sistem operasi Linux, <em>driver </em>yang tersedia untuk berbagai macam hardware relatif lebih sedikit dan bisa pula susah untuk dicari, walaupun piranti keras tersebut masih bisa digunakan karena adanya <em>driver </em>lain yang mungkin masih dapat memfungsikan piranti keras tersebut pada beberapa hal tertentu. Sementara pada Windows, <em>driver </em>cenderung tersedia bahkan senantiasa diperbaharui oleh pabrikan penghasil piranti keras itu sendiri. Sehingga performa <em>driver </em>pada sistem operasi Windows bisa jadi lebih unggul bila dibandingkan pada Linux, khusus pada piranti keras yang tidak tersedia <em>driver </em>terbarunya untuk Linux.</p>\r\n\r\n<p style=\"text-align:left\"><strong>8. Perbedaan dari segi Hak Atas Kekayaan Intelektual</strong></p>\r\n\r\n<p style=\"text-align:left\">Linux beserta program aplikasinya adalah piranti lunak yang memiliki lisensi gratis dan dibebaskan bagi siapa saja untuk menggunakan piranti tersebut. Sementara Windows dan aplikasinya kebanyakan mengandung hak kepemilikan lisensi yang mensyarakatkan pembayaran tertentu agar dapat menggunakan aplikasi tersebut dengan lancar.</p>\r\n\r\n<p style=\"text-align:left\"><strong>9. Perbedaan dari segi partisi sistem</strong></p>\r\n\r\n<p style=\"text-align:left\">Linux menggunakan beberapa jenis partisi, meliputi ext2, ext3, reiserfs, xfs, jfs, FAT32, NTFS, dan lain sebagainya. Sementara Windows pada umumnya mendukung format partisi NTFS, exFAT, FAT32, FAT dan lain sebagainya. Dengan kata lain, pada sistem operasi Windows mungkin tidak akan dapat membaca file sistem dari Linux, sementara pada Linux masih tersedia kemungkinan untuk membaca partisi yang dibuat dan digunakan untuk Windows.</p>\r\n\r\n<p style=\"text-align:left\">Perbedaan lain selain perbedaan di atas adalah sebagai berikut :</p>\r\n\r\n<ol>\r\n	<li>Linux dapat didistribusikan dari banyak pihak, sementara Windows secara resmi ada berada di bawah bendera Microsoft.</li>\r\n	<li>Linux lebih hemat resources bila dibandingkan dengan Windows</li>\r\n	<li>Linux memiliki berbagai varian distro yang berasal dari banyak pihak, sementar Windows sekalipun punya banyak versi hanya dibuat oleh Microsoft</li>\r\n	<li>Untuk penggunaan kantoran Windows lebih mendukung, sementara untuk penggunaan komputerisasi networking seperti server Linux lebih mendukung</li>\r\n	<li>Linux lebih kebal terhadap spyware bila dibandingkan dengan Windows</li>\r\n</ol>\r\n\r\n<p style=\"text-align:left\">Itulah beberapa perbedaan antara Linux dengan Windows yang dapat diketahui. Semoga dengan mengetahui perbedaan di atas dapat membantu untuk menentukan apa yang akan diinstall pada komputer atau laptop Anda.</p>\r\n\r\n<p style=\"text-align:left\">&nbsp;</p>\r\n</div>\r\n', '2019-02-21 03:35:28', 'marketadjie', 16),
(28, 'Tenggelam-Dalam-Dasar-(JAVA)', 'Tenggelam Dalam Dasar (JAVA)', '1550720365belajar-java.png', '<p><strong>&nbsp; </strong>Java adalah salah satu bahasa pemrograman <strong>berorientasi objek</strong> yang dikembangkan oleh <em>Sun Microsystems</em> sejak tahun 1991. Bahasa ini dikembangkan dengan model yang mirip dengan bahasa C++ dan Smalltalk, namun dirancang agar lebih mudah dipakai dan &shy;platform independent, yaitu <u><em>dapat dijalankan di berbagai jenis sistem operasi</em></u> dan arsitektur komputer&shy;&shy;. Oleh karena itu, Java bisa dipergunakan dalam pembangunan software berbasis web, desktop, mobile, dan lainnya.</p>\r\n\r\n<p>Platform independent berarti program yang ditulis dalam bahasa Java dapat dengan mudah dipindahkan antar berbagai jenis sistem operasi dan berbagai jenis arsitektur komputer. Aspek ini sangat penting untuk dapat mencapai tujuan Java sebagai bahasa pemrograman Internet di mana sebuah program akan dijalankan oleh berbagai jenis komputer dengan berbagai jenis sistem operasi. Sifat ini berlaku untuk level <u><strong>source code dan binary code</strong></u> dari program Java. Berbeda dengan <em>bahasa C dan C++</em>, semua tipe data dalam bahasa Java mempunyai ukuran yang konsisten di semua jenis platform. Source code program Java sendiri tidak perlu dirubah sama sekali jika Anda ingin mengkompile ulang di platform lain. Hasil dari <em>mengkompile source code</em> Java bukanlah kode mesin atau instruksi prosesor yang spesifik terhadap mesin tertentu, melainkan berupa bytecode yang berupa file berekstensi .class. Bytecode tersebut dapat langsung Anda eksekusi di tiap platform yang dengan menggunakan J<strong>ava Virtual Machine (JVM)</strong> sebagai <strong>interpreter</strong> terhadap bytecode tersebut.</p>\r\n\r\n<p><strong>JVM</strong> sendiri adalah sebuah aplikasi yang berjalan di atas sebuah sistem operasi dan menerjemahkan bytecode program Java dan mengeksekusinya, sehingga secara konsep bisa dianggap sebagai sebuah interpreter.</p>\r\n\r\n<div class=\"aligncenter wp-caption\" id=\"attachment_574\" style=\"width:372px\"><img alt=\"\" class=\"size-full wp-image-574\" src=\"https://www.mahirkoding.com/wp-content/uploads/2016/12/image01.gif\" style=\"height:91px; width:362px\" />\r\n<p>http://www.master.web.id/mwmag/issue/04/content/tutorial-java-1/image01.gif</p>\r\n</div>\r\n\r\n<p>Dengan cara ini, sebuah program Java yang telah dikompilasi akan dapat berjalan di platform mana saja, asalkan ada JVM di sana. Kompiler dan interpreter untuk program Java berbentuk Java Development Kit (JDK) yang diproduksi oleh Sun Microsystems. JDK ini dapat didownload gratis dari situs <strong><a href=\"http://www.oracle.com/technetwork/indexes/downloads/index.html#java\" target=\"_blank\">java</a></strong>. Interpreter untuk program Java sendiri sering juga disebut <strong>Java Runtime</strong> atau <em><u>Java Virtual Machine</u></em>. Interpreter Java, tanpa kompilernya, disebut Java Runtime Environment (JRE) dapat didownload juga di situs yang sama. Untuk mengembangkan program Java dibutuhkan JDK, sementara jika hanya ingin menjalankan bytecode Java cukup dengan JRE saja.</p>\r\n\r\n<p><strong>JDK (Java Development Kit)</strong> = dipergunakan jika ingin mendevelop aplikasi java, karena di dalamnya terdapat library, compiler dan debugger.</p>\r\n\r\n<p><strong>JRE (Java Runtime Environment)</strong> = dipergunakan untuk menjalankan aplikasi berbasis java.</p>\r\n\r\n<p>Jadi, jika ingin melakukan development program java, cukup menginstall JDK saja karena di JDK adalah &ldquo;bapaknya&rdquo; JRE. Di dalam JDK, sudah termasuk fitur-fitur untuk runtime yang ada pada JRE.</p>\r\n\r\n<p>Beberapa keunggulan java yaitu java merupakan bahasa yang sederhana. Java dirancang agar mudah dipelajari dan digunakan secara efektif. Java tidak menyediakan fitur-fitur rumit bahasa pemrograman tingkat tinggi, serta banyak pekerjaan pemrograman yang mulanya harus dilakukan manual, sekarang digantikan dikerjakan Java secara otomatis seperti dealokasi memori. Bagi pemrogram yang sudah mengenal bahasa C/C++ akan cepat belajar susunan bahasa Java.</p>\r\n\r\n<p>Java merupakan <strong>bahasa berorientasi objek (OOP)</strong> yaitu cara ampuh dalam pengorganisasian dan pengembangan perangkat lunak. Pada OOP, program komputer sebagai kelompok objek yang saling berinteraksi. Deskripsi ringkas OOP adalah mengorganisasikan program sebagai kumpulan komponen, disebut objek. <u><strong>Objek-objek</strong></u> ini ada secara independen, mempunyai aturan-aturan <u>berkomunikasi dengan objek lain</u> dan untuk memerintahkan objek lain guna meminta informasi tertentu atau meminta objek lain mengerjakan sesuatu. Kelas bertindak sebagai modul sekaligus tipe. Sebagai tipe maka pada saat jalan, program menciptakan objek-objek yang merupakan instan-instan kelas. Kelas dapat mewarisi kelas lain. Java tidak mengijinkan pewarisan jamak namun menyelesaikan kebutuhan pewarisan jamak dengan fasilitas antarmuka yang lebih elegan.</p>\r\n\r\n<p><strong>NB : Konsep OOP dan implementasinya dalam Java akan kita bahas di tutorial yang akan datang.</strong></p>\r\n\r\n<p>Java termasuk bahasa <em><strong>Multithreading</strong></em>. Thread adalah untuk menyatakan program komputer melakukan lebih dari satu tugas di satu waktu yang sama. Java menyediakan kelas untuk menulis program multithreaded, program mempunyai lebih dari satu thread eksekusi pada saat yang sama sehingga memungkinkan program menangani beberapa tugas secara konkuren.</p>\r\n\r\n<p>Java mempunyai mekanisme<em><strong> exception-handling</strong></em> yang ampuh. Exception-handling menyediakan cara untuk memisahkan antara bagian penanganan kesalahan dengan bagian kode normal sehingga menuntun ke struktur kode program yang lebih bersih dan menjadikan aplikasi lebih tegar. Ketika kesalahan yang serius ditemukan, program Java menciptakan <u>exception</u>. Exception dapat ditangkap dan dikelola program tanpa resiko membuat sistem menjadi turun.</p>\r\n\r\n<p>Mungkin itu saja sedikit penjelasan singkat mengenai pengenalan java, kelebihan java dan alasan mengapa kita harus menggunakan java dalam kasus yang tepat. Masih banyak lagi fitur-fitur dari java yang belum saya sebutkan, untuk lebih mendalam tentang pengenalan java dan penggunaannya akan kita bahas satu per satu di blog ini.</p>\r\n', '2019-02-21 03:39:25', 'marketadjie', 11),
(29, 'Forntend-VS-Backend', 'Forntend VS Backend', '1550720518frontend-vs-backend-dev.png', '<p>Dalam dunia IT khususnya dibidang develover kita sering mendengar dengan istilah Front-End dan Back-End, namun beberapa orang mungkin tidak akan tahu maksud istilah Front-End dan Back-End. Dan buat teman - teman yang baru terjun di dunia IT khususnya dibagian developer wajib tahu mengenai Perbedaan Front-End dan Back-End supaya nanti bisa memilih. Apakah nantinya ingin menjadi Front-End developer ataupun Back-End developer. Untuk itu simak Perbedaan Front-End dan Back-End berikut ini.</p>\r\n\r\n<h2><strong>Perbedaan Front-End dan Back-End</strong></h2>\r\n\r\n<h3><strong>1. Front-End</strong></h3>\r\n\r\n<p><img alt=\"Perbedaan Front-End dan Back-End\" src=\"https://www.dumetschool.com/uploads/fck//Perbedaan-Front-End-dan-Back-End-01-18122017.jpg\" style=\"height:150px; width:500px\" /></p>\r\n\r\n<p>Dari namanya (Front-End) harusnya kita mengerti arti dari Front-End. Front-End merupakan istilah yang mengacu pada developer yang bekerja dibagian desain layout suatu website atau aplikasi, dimana seorang developer akan mengerjakan user interface agar desain terlihat menarik dan tidak terlihat membosankan untuk dilihat. Seorang Front-End developer wajib menguasai program HTML, CSS, Javascript dan juga framework seperti jQuery, Bootstrap dan lain sebagainya.</p>\r\n\r\n<h3><strong>2. Back-End</strong></h3>\r\n\r\n<p><img alt=\"Perbedaan Front-End dan Back-End\" src=\"https://www.dumetschool.com/uploads/fck//Perbedaan-Front-End-dan-Back-End-02-18122017.jpg\" style=\"height:150px; width:500px\" /></p>\r\n\r\n<p>Selanjutnya adalah Back-End, setelah tampilan desain dibuat oleh Front-End developer maka tugas akan dilanjutkan oleh seorang Back-End dimana tugas utamanya adalah membuat website dan atau aplikasi bisa berjalan dan bisa digunakan oleh pengguna, misalnya membuat program CMS (dashboard, halaman admin, dll). Selain itu seorang Back-End developer biasanya menguasai bahasa program seperti PHP, java, dan dan bisa menggunakan framework seperti Code Igniter, Laravel dan framework lain-lainnya. Tidak ketinggalan juga seorang Back-End developer biasanya memahami database seperti MySQL dll. Bukan tetapi seorang Back-End tidak bisa mengerjakan Front-End developer ataupun sebaliknya, biasanya mereka juga bisa mengerjakan Front-End.</p>\r\n\r\n<p>Nah gimana teman - teman sudah jelas yah informasi mengenai&nbsp;Perbedaan Front-End dan Back-End ? semoga informasi ini bermanfaat untuk teman - teman semua. Dan jika kalian ingin lebih belajar lebih jauh lagi tentang dunia web atau ingin bisa membuat sebuah web yang keren, kalian bisa daftar di dumetschool, baik untuk info selebihnya kalian bisa mengunjungi website dumetschool di www.dumetschool.com. Oke teman -&nbsp; teman sampai jumpa di artikel selanjutnya ya.</p>\r\n', '2019-02-21 03:41:58', 'marketadjie', 16);

-- --------------------------------------------------------

--
-- Struktur dari tabel `tbl_comment`
--

CREATE TABLE `tbl_comment` (
  `id_comment` int(11) NOT NULL,
  `username` char(20) NOT NULL,
  `email` char(20) NOT NULL,
  `comment` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- --------------------------------------------------------

--
-- Struktur dari tabel `tbl_kategori`
--

CREATE TABLE `tbl_kategori` (
  `Id_kategori` int(11) NOT NULL,
  `Nama_kategori` char(20) NOT NULL,
  `Img_kategori` char(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `tbl_kategori`
--

INSERT INTO `tbl_kategori` (`Id_kategori`, `Nama_kategori`, `Img_kategori`) VALUES
(6, 'Html5', '1550702186html.png'),
(7, 'Css', '1550702200css.png'),
(8, 'Bootstrap', '1550702219bootstrap.png'),
(9, 'Codeigniter', '1550702234codeigniter.png'),
(10, 'GIT', '1550637445git.png'),
(11, 'Java', '1550702252java.png'),
(12, 'Javascript', '1550702374javascript.png'),
(13, 'Mysql', '1550702396mysql.png'),
(14, 'PHP', '1550637486php.png'),
(15, 'Python', '1550702476python.png'),
(16, 'Topiklainnya', '1550702494doc.png');

-- --------------------------------------------------------

--
-- Struktur dari tabel `tbl_page`
--

CREATE TABLE `tbl_page` (
  `Id_page` int(11) NOT NULL,
  `Nama_page` char(25) NOT NULL,
  `Url_page` char(25) NOT NULL,
  `Isi_page` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `tbl_page`
--

INSERT INTO `tbl_page` (`Id_page`, `Nama_page`, `Url_page`, `Isi_page`) VALUES
(1, 'About', 'About', '<p><strong>Tentang Codiweb.com : Programmer Newbie Pengguna Linux</strong></p><p>&nbsp;</p><p>Hello World!</p><p>&nbsp;</p><p>Selamat datang di Codiweb.</p><p>Petanikode adalah sebuah blog yang akan membantumu belajar pemrograman menggunakan Linux. Mulai dari hal-hal dasar dulu sama-sama belajar.</p><p>Tidak menutup kemungkinan, akan ada juga beberapa tutorial yang menggunakan sistem operasi lain. Meskipun begitu, kami akan usahakan lebih banyak menggunakan Linux, agar sesuai dengan selogannya <strong>&ldquo;Programmer Pengguna Linux&rdquo;</strong>.</p><p>Kenapa menggunakan Linux?<a href=\"http://localhost/index.php\"> Pengen aja</a></p><p><strong>Siapa dibalik Petani Kode?</strong></p><p>{ &quot;name&quot;: &quot;Adjie Ramadhani&quot;, &quot;nickName&quot;: [&quot;Aji&quot;, &quot;Adjie&quot;], &quot;otherName&quot;: [&quot;marketadjie&quot;], &quot;email&quot;: &quot;marketadjie@gmail.com&quot; }</p><p>Perkenalkan, saya <strong>Adjie</strong>. Pengguna Linux sejak tahun 2017 hingga saat ini. Sehari-hari menggunakan GNU/Linux untuk pemrograman, desain, menggambar, menulis, nonton anime dan youtupan</p><p>Saat ini, saya masih ada di bangku sekolah kelas XII smk di <a href=\"http://smkti.tambakberas.com\">SMK TI ANNAJIYAH</a> kota jombang program jurusan Rekayasa Perangkat Lunak</p><p><strong>Kenapa Membuat Codiweb?</strong></p><p>Blog ini awalnya dibangun sebagai catatan saat belajar pemrograman dan project pengerjaan TA (tugas akhir).Selain itu, saya juga ingin berbagi ilmu dan pengalaman. Walaupun nggak punya banyak ilmu dan pengalaman. Setidaknya bisa berkontribusi dan berbagi hal positif untuk semua.</p><p>Semoga kehadiran blog ini dapat bermanfaat untuk semua. Terima kasih sudah mendukung Petanikode.</p><p>Maju terus programmer Indonesia!</p>'),
(2, 'Contact', 'Contact', '<h1>Cara Hubungi codiweb?</h1>\r\n\r\n<p>&nbsp;Kamu bisa mengirim pertanyaan atau kritik dan saran ke <span style=\"color:#c0392b\">marketadjie@gmail.com </span></p>\r\n\r\n<p>kritik dan saran yang membangun sangat saya hargai.Terimakasih.</p>\r\n');

-- --------------------------------------------------------

--
-- Struktur dari tabel `tbl_user`
--

CREATE TABLE `tbl_user` (
  `Id_user` int(11) NOT NULL,
  `Nama_lengkap` char(50) NOT NULL,
  `Username` char(50) NOT NULL,
  `Password` char(50) NOT NULL,
  `Email` char(50) NOT NULL,
  `Img_user` char(255) NOT NULL,
  `Deskripsi` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- Dumping data untuk tabel `tbl_user`
--

INSERT INTO `tbl_user` (`Id_user`, `Nama_lengkap`, `Username`, `Password`, `Email`, `Img_user`, `Deskripsi`) VALUES
(1, 'adjie ramadhani', 'marketadjie', '827ccb0eea8a706c4c34a16891f84e7b', 'marketadjie@gmail.com', '1550640751boy.png', '<p><strong>Programmer Pengguna Linux Yang dikejar-kejar DEADLINE</strong></p>\r\n');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `tbl_artikel`
--
ALTER TABLE `tbl_artikel`
  ADD PRIMARY KEY (`Id_artikel`),
  ADD KEY `Id_kategori` (`Id_kategori`),
  ADD KEY `Id_kategori_2` (`Id_kategori`);

--
-- Indexes for table `tbl_comment`
--
ALTER TABLE `tbl_comment`
  ADD PRIMARY KEY (`id_comment`);

--
-- Indexes for table `tbl_kategori`
--
ALTER TABLE `tbl_kategori`
  ADD PRIMARY KEY (`Id_kategori`);

--
-- Indexes for table `tbl_page`
--
ALTER TABLE `tbl_page`
  ADD PRIMARY KEY (`Id_page`);

--
-- Indexes for table `tbl_user`
--
ALTER TABLE `tbl_user`
  ADD PRIMARY KEY (`Id_user`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `tbl_artikel`
--
ALTER TABLE `tbl_artikel`
  MODIFY `Id_artikel` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=30;
--
-- AUTO_INCREMENT for table `tbl_comment`
--
ALTER TABLE `tbl_comment`
  MODIFY `id_comment` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `tbl_kategori`
--
ALTER TABLE `tbl_kategori`
  MODIFY `Id_kategori` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=17;
--
-- AUTO_INCREMENT for table `tbl_page`
--
ALTER TABLE `tbl_page`
  MODIFY `Id_page` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;
--
-- AUTO_INCREMENT for table `tbl_user`
--
ALTER TABLE `tbl_user`
  MODIFY `Id_user` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=2;
--
-- Ketidakleluasaan untuk tabel pelimpahan (Dumped Tables)
--

--
-- Ketidakleluasaan untuk tabel `tbl_artikel`
--
ALTER TABLE `tbl_artikel`
  ADD CONSTRAINT `tbl_artikel_ibfk_1` FOREIGN KEY (`Id_kategori`) REFERENCES `tbl_kategori` (`Id_kategori`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
